events {
    worker_connections 1024;
}

http {
    # 设置上游服务器组
    upstream fastapi_servers {
        # 默认负载均衡策略是轮询 (round-robin)
        server fastapi-app1:8000;
        server fastapi-app2:8000;
        server fastapi-app3:8000;

        # 可选：如果你需要会话保持，可以考虑使用ip_hash（但通常无状态API不需要）
        # ip_hash;
    }

    server {
        listen 80;

        # 全局客户端最大请求体大小，防止大文件上传被拦截
        client_max_body_size 100M;

        location / {
            # 代理到上游服务器组
            proxy_pass http://fastapi_servers;

            # !!! 核心修复：请求体处理 !!!
            # 禁用请求缓冲，立即将数据转发给后端，对大文件上传和流式传输至关重要
            proxy_request_buffering off;
            # 设置代理读取超时（单位：秒）
            proxy_read_timeout 300s;

            # 传递正确的请求头信息
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 传递原始客户端请求的Host头（有时很有用）
            proxy_set_header Original-Host $http_host;

            # 可选：用于WebSocket连接升级（如果你的应用需要）
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}